CREATE OR REPLACE VIEW GET_ONLY_USERS AS 
	SELECT
	    USERS.UTILISATEUR_ID AS USERS_ID,
	    USERS.SURNOM AS NICKNAME,
	    JOUEUR.VICTOIRES AS TOTAL_VICTORY
	FROM UTILISATEUR AS USERS
	    INNER JOIN JOUEUR ON USERS.UTILISATEUR_ID = JOUEUR.U
UTILISATEUR_ID; 

CREATE OR REPLACE FUNCTION UPDATE_GET_ONLY_USERS() 
RETURNS TRIGGER AS 
	$$ BEGIN IF (TG_OP = 'DELETE') THEN
	DELETE FROM
	    PUBLIC.UTILISATEUR
	WHERE SURNOM = OLD.SURNOM;
	IF NOT FOUND THEN RETURN NULL;
	END IF;
	OLD.DATE_DEPART = NOW();
	OLD.NOMBRE_VICTOIRES = TOTAL_VICTORY;
	OLD.SURNOM = NICKNAME;
	INSERT INTO
	    HALL_OF_FAME
	VALUES (
	        OLD.SURNOM,
	        OLD.DATE_DEPART,
	        OLD.NOMBRE_VICTOIRES
	    );
	RETURN OLD;
	ELSEIF(TG_OP = 'UPDATE') THEN
	UPDATE UTILISATEUR
	SET SURNOM = NEW.SURNOM
	WHERE SURNOM = OLD.SURNOM;
	IF NOT FOUND THEN RETURN NULL;
	END IF;
	NEW.DATE_DEPART = NOW();
	NEW.NOMBRE_VICTOIRES = TOTAL_VICTOIRY;
	NEW.SURNOM = OLD.SURNOM;
	INSERT INTO
	    HALL_OF_FAME
	VALUES (
	        NEW.SURNOM,
	        NEW.DATE_DEPART,
	        NEW.NOMBRE_VICTOIRES
	    );
	RETURN NEW;
	ELSEIF (TG_OP = 'INSERT') THEN
	INSERT INTO
	    UTILISATEUR
	VALUES
	(
	        NEW.UTILISATEUR_ID,
	        NEW.SURNOM,
	        NEW.EMAIL,
	        NEW.MOT_DE_PASSE
	    );
	NEW.DATE_DEPART = NOW();
	INSERT INTO
	    HALL_OF_FAME
	VALUES
	(
	        NEW.SURNOM,
	        NEW.DATE_DEPART,
	        NEW.NOMBRE_VICTOIRES
	    );
	RETURN NEW;
	END IF;
END; 

$$ LANGUAGE PLPGSQL;

CREATE TRIGGER HALL_OF_FAME 
	INSTEAD OF
	INSERT OR
	UPDATE OR
	DELETE
	    ON GET_ONLY_USERS FOR EACH ROW
	EXECUTE
	    FUNCTION UPDATE_GET_ONLY_USERS();
